scalar Date
scalar URL

type Query {
  user(id: ID!): User
  room(id: ID!): Room
  roomByCode(code: String!): Room
  games: [GameMeta]!
}

type Mutation {
  login(loginInput: LoginInput): LoginMutationResponse
  createRoom: CreateRoomMutationResponse
  joinRoom(joinInput: JoinRoomInput): JoinRoomMutationResponse
  voteForGame(voteInput: VoteForGameInput): VoteForGameMutationResponse
}

interface MutationResponse {
  code: String!
  success: Boolean!
  message: String!
}

###
#
# Logins
#
###
input LoginInput {
  accessToken: String!
}

type LoginMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  user: User
}

###
#
# Users
#
###
type User @entity {
  id: ID! @id
  username: String! @column
  image: URL @column

  player: Player @column
  room: Room @column

  token: String @column
}

interface Player {
  id: ID! @id
  user: User! @column
}

###
#
# Rooms
#
###
type Room @entity {
  id: ID! @id
  code: String! @column
  leader: User! @column
  users: [User]! @column

  currentGame: Game @column

  gameVotes: [GameVote]! @column
  gameHistory: [Game] @column

  dateCreated: Date! @column
}

type CreateRoomInput {
  username: String!
}

type CreateRoomMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  room: Room
  user: User
}

input JoinRoomInput {
  roomCode: String!
  username: String!
}

type JoinRoomMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  room: Room
  user: User
}

###
#
# Votes
#
###
type GameVote @entity {
  user: User!
  game: GameMeta!
}

input VoteForGameInput {
  gameId: ID!
}

type VoteForGameMutationResponse implements MutationResponse {
  code: String!
  success: Boolean!
  message: String!
  vote: GameVote
}

###
#
# Games
#
###
interface Game {
  id: ID! @id
  active: Boolean! @column
  winners: [User] @column

  dateStarted: Date! @column
  dateEnded: Date @column
}

type GameMeta @entity {
  id: ID! @id
  name: String! @column
  coverImage: URL @column
}
